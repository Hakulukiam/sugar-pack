#!/usr/bin/env php
<?php

// Find autoload.php
$possibleFiles = [__DIR__.'/../../../autoload.php', __DIR__.'/../../autoload.php', __DIR__.'/../autoload.php', __DIR__.'/../vendor/autoload.php'];

$file = null;
foreach ($possibleFiles as $possibleFile) {
    if (file_exists($possibleFile)) {
        $file = $possibleFile;
        break;
    }
}

if (null === $file) {
    throw new RuntimeException('Unable to locate autoload.php file.');
}

require_once $file;
unset($possibleFiles, $possibleFile, $file);

use Phpfastcache\CacheManager;
use Phpfastcache\Config\Config;
use SugarPack\Commands\PackCommand;
use SugarPack\Commands\PublishCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Yaml\Yaml;

try {
    $GLOBALS['config'] = Yaml::parseFile(dirname($argv[0]) . '/config.yaml');
} catch (\Exception $e) {
    $GLOBALS['config'] = [
        'output_dir' => '~/Downloads',
        'package_naming' => 'Versioned'
    ];
}

set_error_handler(function ($errno, $errstr, $errfile, $errline, $errcontext) {
    // error was suppressed with the @-operator
    if (0 === error_reporting()) {
        return false;
    }
    throw new ErrorException($errstr, 0, $errno, $errfile, $errline);
});

CacheManager::setDefaultConfig(new Config([
    'path' => sys_get_temp_dir()
]));

$app = new Application('sugar-pack', '1.0.2');

$app->addCommands([
    new PackCommand(),
    new PublishCommand()
]);

$app->run();
